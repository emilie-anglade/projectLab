// <auto-generated />
using System;
using APIhackArtilect;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIhackArtilect.Migrations
{
    [DbContext(typeof(ArtilectDbContext))]
    [Migration("20210114151406_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("APIhackArtilect.Members", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DreamProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Domain", b =>
                {
                    b.Property<int>("DomainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("InterestsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("DomainId");

                    b.HasIndex("InterestsId");

                    b.HasIndex("ProjectsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Friends", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("FriendFirstId")
                        .HasColumnType("int");

                    b.Property<int?>("FriendsSecondId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FriendFirstId");

                    b.HasIndex("FriendsSecondId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Interests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectTargetId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectTargetId");

                    b.HasIndex("SenderId");

                    b.ToTable("Subcriptions");
                });

            modelBuilder.Entity("APIhackArtilect.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Category")
                        .HasColumnType("bit");

                    b.Property<string>("DateBegin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MembersProjects", b =>
                {
                    b.Property<int>("MembersListId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsListId")
                        .HasColumnType("int");

                    b.HasKey("MembersListId", "ProjectsListId");

                    b.HasIndex("ProjectsListId");

                    b.ToTable("MembersProjects");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Domain", b =>
                {
                    b.HasOne("APIhackArtilect.Model.Interests", null)
                        .WithMany("Domain")
                        .HasForeignKey("InterestsId");

                    b.HasOne("APIhackArtilect.Projects", null)
                        .WithMany("Area")
                        .HasForeignKey("ProjectsId");

                    b.HasOne("APIhackArtilect.Model.Skills", null)
                        .WithMany("Domain")
                        .HasForeignKey("SkillsId");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Friends", b =>
                {
                    b.HasOne("APIhackArtilect.Members", "FriendFirst")
                        .WithMany()
                        .HasForeignKey("FriendFirstId");

                    b.HasOne("APIhackArtilect.Members", "FriendsSecond")
                        .WithMany()
                        .HasForeignKey("FriendsSecondId");

                    b.Navigation("FriendFirst");

                    b.Navigation("FriendsSecond");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Interests", b =>
                {
                    b.HasOne("APIhackArtilect.Members", "Member")
                        .WithMany("Interests")
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Invitation", b =>
                {
                    b.HasOne("APIhackArtilect.Projects", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("APIhackArtilect.Members", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.HasOne("APIhackArtilect.Members", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.Navigation("Project");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Skills", b =>
                {
                    b.HasOne("APIhackArtilect.Members", "Member")
                        .WithMany("Skills")
                        .HasForeignKey("MemberId");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Subscribe", b =>
                {
                    b.HasOne("APIhackArtilect.Projects", "ProjectTarget")
                        .WithMany()
                        .HasForeignKey("ProjectTargetId");

                    b.HasOne("APIhackArtilect.Members", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.Navigation("ProjectTarget");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("MembersProjects", b =>
                {
                    b.HasOne("APIhackArtilect.Members", null)
                        .WithMany()
                        .HasForeignKey("MembersListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIhackArtilect.Projects", null)
                        .WithMany()
                        .HasForeignKey("ProjectsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIhackArtilect.Members", b =>
                {
                    b.Navigation("Interests");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Interests", b =>
                {
                    b.Navigation("Domain");
                });

            modelBuilder.Entity("APIhackArtilect.Model.Skills", b =>
                {
                    b.Navigation("Domain");
                });

            modelBuilder.Entity("APIhackArtilect.Projects", b =>
                {
                    b.Navigation("Area");
                });
#pragma warning restore 612, 618
        }
    }
}
